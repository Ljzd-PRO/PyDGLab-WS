{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6b22\u8fce\u4f7f\u7528 PyDG-Lab-WS","text":"PyDGLab-WS  <p>Warning</p> <p>\u76ee\u524d\u9879\u76ee\u8fd8\u5728\u5f00\u53d1\u4e2d\uff0cAPI \u53ef\u80fd\u53d1\u751f\u8f83\u591a\u53d8\u66f4</p>"},{"location":"#_1","title":"\ud83d\udca1 \u7279\u6027","text":"<ul> <li>\u901a\u8fc7\u8be5\u5e93\u53ef\u5f00\u53d1 Python \u7a0b\u5e8f\uff0c\u63a5\u5165 DG-Lab App</li> <li>\u5b8c\u5168\u4f7f\u7528 asyncio \u5f02\u6b65\uff0c\u5e76\u53d1\u6267\u884c\u5404\u9879\u64cd\u4f5c</li> <li>\u53ef\u90e8\u7f72\u7b2c\u4e09\u65b9\u7ec8\u7aef\u4e0e Socket \u670d\u52a1\u4e00\u4f53\u7684\u670d\u52a1\u7aef\uff0c\u964d\u4f4e\u90e8\u7f72\u590d\u6742\u5ea6\u548c\u5ef6\u8fdf</li> <li>\u4f7f\u7528\u5f02\u6b65\u751f\u6210\u5668\u3001\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u7b49\uff0c\u7ed3\u5408\u8bed\u8a00\u7279\u6027</li> <li>\u901a\u8fc7 Pydantic, \u679a\u4e3e \u7ba1\u7406\u6d88\u606f\u7ed3\u6784\u548c\u5e38\u91cf\uff0c\u4fbf\u4e8e\u5f00\u53d1</li> </ul>"},{"location":"#dg-lab-app-socket","title":"\ud83d\udd27 DG-Lab App \u7684 Socket \u88ab\u63a7\u529f\u80fd\u652f\u6301\u7684\u64cd\u4f5c","text":"<ul> <li>\u83b7\u53d6 A, B \u901a\u9053\u5f3a\u5ea6 \u4ee5\u53ca \u901a\u9053\u5f3a\u5ea6\u4e0a\u9650 \u7684\u6570\u636e\u66f4\u65b0</li> <li>\u5bf9 A, B \u901a\u9053\u5f3a\u5ea6\u8fdb\u884c\u64cd\u4f5c\uff0c\u652f\u6301\u589e\u52a0\u3001\u51cf\u5c11\u3001\u8bbe\u5b9a\u5230\u6307\u5b9a\u503c</li> <li>\u5411 App \u53d1\u9001\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u7684\u6ce2\u5f62\u64cd\u4f5c\u6570\u636e</li> <li>\u6e05\u7a7a App \u6ce2\u5f62\u64cd\u4f5c\u961f\u5217</li> <li>\u83b7\u53d6 App \u6309\u4e0b\u53cd\u9988\u6309\u94ae\u7684\u901a\u77e5</li> </ul>"},{"location":"#_2","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"<p>\u524d\u8a00</p> <p>\u6ce8\u610f\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5148\u5927\u81f4\u4e86\u89e3\u4e00\u4e0b\u7b2c\u4e09\u65b9\u7ec8\u7aef\u901a\u8fc7 WebSocket \u8fde\u63a5\u63a7\u5236 DG-Lab App \u7684\u57fa\u672c\u6d41\u7a0b\u548c\u539f\u7406\u3002 \ud83d\udd17\u5b98\u65b9\u6587\u6863</p>"},{"location":"#_3","title":"\ud83d\udd28 \u5b89\u88c5","text":"<pre><code>pip3 install pydglab-ws\n</code></pre>"},{"location":"#_4","title":"\ud83d\udce1 \u642d\u5efa\u670d\u52a1\u7aef","text":"<p><pre><code>import asyncio\nfrom pydglab_ws.server import DGLabWSServer\n\nasync def main():\n    async with DGLabWSServer(\"0.0.0.0\", 5678, 60) as server:\n        while True:\n            print(f\"\u5df2\u8fde\u63a5\u7684 WebSocket \u5ba2\u6237\u7aef\uff08\u7ec8\u7aef/App\uff09\uff1a{list(server.ws_client_ids)}\")\n            print(f\"\u5df2\u8fde\u63a5\u7684\u672c\u5730\u7ec8\u7aef\uff1a{list(server.local_client_ids)}\")\n            print(f\"\u5173\u7cfb\u7ed1\u5b9a\uff1a{server.client_id_to_target_id}\")\n            await asyncio.sleep(5)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> \u66f4\u591a\u6f14\u793a\u8bf7\u67e5\u770b <code>examples/server.py</code></p>"},{"location":"#_5","title":"\ud83d\udd79\ufe0f \u642d\u5efa\u5ba2\u6237\u7aef / \u7b2c\u4e09\u65b9\u7ec8\u7aef","text":"<p>\u5f53\u8fdb\u5165 <code>DGLabWSServer</code> \u7684\u5f02\u6b65\u751f\u6210\u5668\u65f6\uff0c\u4ece WebSocket \u670d\u52a1\u7aef\u83b7\u53d6 <code>clientId</code> \u7684\u64cd\u4f5c\u4f1a \u81ea\u52a8\u5b8c\u6210</p> <p><pre><code>import asyncio\nfrom websockets import ConnectionClosedOK\nfrom pydglab_ws import DGLabWSConnect\n\ndef print_qrcode(_: str):\n    \"\"\"\u8f93\u51fa\u4e8c\u7ef4\u7801\u5230\u7ec8\u7aef\u754c\u9762\"\"\"\n    ...\n\nasync def main():\n    try:\n        async with DGLabWSConnect(\"ws://192.168.1.161:5678\") as client:\n            # \u83b7\u53d6\u4e8c\u7ef4\u7801\n            url = client.get_qrcode()\n            print(\"\u8bf7\u7528 DG-Lab App \u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u8fde\u63a5\")\n            print_qrcode(url)\n\n            # \u7b49\u5f85\u7ed1\u5b9a\n            await client.bind()\n            print(f\"\u5df2\u4e0e App {client.target_id} \u6210\u529f\u7ed1\u5b9a\")\n\n            # \u4ece App \u63a5\u6536\u6570\u636e\u66f4\u65b0\uff0c\u5e76\u8fdb\u884c\u8fdc\u63a7\u64cd\u4f5c\n            async for data in client.data_generator():\n                print(f\"\u6536\u53d6\u5230\u6570\u636e\uff1a{data}\")\n    except ConnectionClosedOK:\n        print(\"Socket \u670d\u52a1\u7aef\u65ad\u5f00\u8fde\u63a5\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> \u66f4\u591a\u6f14\u793a\u8bf7\u67e5\u770b <code>examples/ws_client.py</code></p>"},{"location":"#websocket","title":"\ud83d\udd79\ufe0f \u642d\u5efa\u4e0e\u7b2c\u4e09\u65b9\u7ec8\u7aef\u4e00\u4f53\u7684 WebSocket \u670d\u52a1\u7aef","text":"<p>\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u4ec5\u63d0\u4f9b DG-Lab WebSocket \u670d\u52a1\u7aef\u670d\u52a1\uff0c\u8fd8\u751f\u6210\u4e86\u4e00\u4e2a\u672c\u5730\u7ec8\u7aef\u53ef\u4f9b App \u8fde\u63a5\u3002</p> <p>Tip</p> <p>\u4e0d\u7ba1\u662f\u672c\u5730\u7ec8\u7aef <code>DGLabLocalClient</code> \u8fd8\u662f WebSocket \u7ec8\u7aef <code>DGLabWSClient</code>\uff0c \u5305\u542b\u7684\u4e3b\u8981\u65b9\u6cd5\u90fd\u76f8\u540c\uff0c\u56e0\u6b64\u5728\u8be5\u6bb5\u4ee3\u7801\u4e2d\uff0c\u7ec8\u7aef\u76f8\u5173\u7684\u903b\u8f91\u4e0e\u4e0a\u9762\u7684\u72ec\u7acb\u7684 WebSocket \u7ec8\u7aef\u7684\u5b9e\u73b0\u57fa\u672c\u76f8\u540c\u3002 \u8fd9\u79cd\u65b9\u5f0f\uff0c\u7701\u53bb\u4e86\u7ec8\u7aef\u8fde\u63a5 WebSocket \u670d\u52a1\u7aef\u7684\u73af\u8282\uff0c\u7ec8\u7aef\u4e0e WebSocket \u670d\u52a1\u7aef\u4e00\u4f53\uff0c\u7f51\u7edc\u5ef6\u8fdf\u66f4\u4f4e\uff0c\u90e8\u7f72\u66f4\u65b9\u4fbf\u3002</p> <pre><code>import asyncio\nfrom pydglab_ws import DGLabWSServer\n\ndef print_qrcode(_: str):\n    \"\"\"\u8f93\u51fa\u4e8c\u7ef4\u7801\u5230\u7ec8\u7aef\u754c\u9762\"\"\"\n    ...\n\nasync def main():\n    async with DGLabWSServer(\"0.0.0.0\", 5678, 60) as server:\n        client = server.new_local_client()\n\n        url = client.get_qrcode(\"ws://192.168.1.161:5678\") # (1)\n        print(\"\u8bf7\u7528 DG-Lab App \u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u8fde\u63a5\")\n        print_qrcode(url)\n\n        # \u7b49\u5f85\u7ed1\u5b9a\n        await client.bind()\n        print(f\"\u5df2\u4e0e App {client.target_id} \u6210\u529f\u7ed1\u5b9a\")\n\n        # \u4ece App \u63a5\u6536\u6570\u636e\u66f4\u65b0\uff0c\u5e76\u8fdb\u884c\u8fdc\u63a7\u64cd\u4f5c\n        async for data in client.data_generator():\n            print(f\"\u6536\u53d6\u5230\u6570\u636e\uff1a{data}\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> <ol> <li>\u6b64\u5904\u7684 URI \u9700\u8981\u662f DG-Lab \u53ef\u4ee5\u8fde\u63a5\u4e0a\u7684\uff0c\u901a\u5e38\u662f\u5185\u7f51\u6216\u516c\u7f51\uff0c\u800c\u4e0d\u662f\u672c\u5730\u73af\u56de\u5730\u5740</li> </ol> <p>\u66f4\u591a\u6f14\u793a\u8bf7\u67e5\u770b <code>examples/server_with_local_client.py</code></p>"},{"location":"about-dg-lab/","title":"\u5173\u4e8e DG-Lab","text":"<p>\u5b98\u65b9\u5f00\u6e90\u8d44\u6e90\uff1ahttps://github.com/DG-LAB-OPENSOURCE/DG-LAB-OPENSOURCE</p>"},{"location":"more/","title":"\u66f4\u591a","text":""},{"location":"more/#_2","title":"\u94fe\u63a5","text":"<ul> <li>PyPI: \ud83d\udd17pydglab-ws</li> <li>\u5f00\u53d1\u7248\u5206\u652f\uff1a\ud83d\udd17dev</li> </ul>"},{"location":"more/#_3","title":"\u4ee3\u7801\u8986\u76d6\u7387","text":""},{"location":"more/#_4","title":"\u8bb8\u53ef\u8bc1","text":"<p>PyDGLab-WS \u4f7f\u7528 BSD 3-Clause \u8bb8\u53ef\u8bc1.</p> <p>Copyright \u00a9 2024 by Ljzd-PRO.</p>"},{"location":"usage/","title":"\u7528\u6cd5","text":""},{"location":"usage/#_1","title":"\ud83d\udce1 \u642d\u5efa\u670d\u52a1\u7aef","text":"<p><pre><code>import asyncio\nfrom pydglab_ws.server import DGLabWSServer\n\nasync def main():\n    async with DGLabWSServer(\"0.0.0.0\", 5678, 60) as server:\n        while True:\n            print(f\"\u5df2\u8fde\u63a5\u7684 WebSocket \u5ba2\u6237\u7aef\uff08\u7ec8\u7aef/App\uff09\uff1a{list(server.ws_client_ids)}\")\n            print(f\"\u5df2\u8fde\u63a5\u7684\u672c\u5730\u7ec8\u7aef\uff1a{list(server.local_client_ids)}\")\n            print(f\"\u5173\u7cfb\u7ed1\u5b9a\uff1a{server.client_id_to_target_id}\")\n            await asyncio.sleep(5)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> \u66f4\u591a\u6f14\u793a\u8bf7\u67e5\u770b <code>examples/server.py</code></p>"},{"location":"usage/#_2","title":"\ud83d\udd79\ufe0f \u642d\u5efa\u5ba2\u6237\u7aef / \u7b2c\u4e09\u65b9\u7ec8\u7aef","text":"<p>\u5f53\u8fdb\u5165 <code>DGLabWSServer</code> \u7684\u5f02\u6b65\u751f\u6210\u5668\u65f6\uff0c\u4ece WebSocket \u670d\u52a1\u7aef\u83b7\u53d6 <code>clientId</code> \u7684\u64cd\u4f5c\u4f1a \u81ea\u52a8\u5b8c\u6210</p> <p><pre><code>import asyncio\nfrom websockets import ConnectionClosedOK\nfrom pydglab_ws import DGLabWSConnect\n\ndef print_qrcode(_: str):\n    \"\"\"\u8f93\u51fa\u4e8c\u7ef4\u7801\u5230\u7ec8\u7aef\u754c\u9762\"\"\"\n    ...\n\nasync def main():\n    try:\n        async with DGLabWSConnect(\"ws://192.168.1.161:5678\") as client:\n            # \u83b7\u53d6\u4e8c\u7ef4\u7801\n            url = client.get_qrcode()\n            print(\"\u8bf7\u7528 DG-Lab App \u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u8fde\u63a5\")\n            print_qrcode(url)\n\n            # \u7b49\u5f85\u7ed1\u5b9a\n            await client.bind()\n            print(f\"\u5df2\u4e0e App {client.target_id} \u6210\u529f\u7ed1\u5b9a\")\n\n            # \u4ece App \u63a5\u6536\u6570\u636e\u66f4\u65b0\uff0c\u5e76\u8fdb\u884c\u8fdc\u63a7\u64cd\u4f5c\n            async for data in client.data_generator():\n                print(f\"\u6536\u53d6\u5230\u6570\u636e\uff1a{data}\")\n    except ConnectionClosedOK:\n        print(\"Socket \u670d\u52a1\u7aef\u65ad\u5f00\u8fde\u63a5\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> \u66f4\u591a\u6f14\u793a\u8bf7\u67e5\u770b <code>examples/ws_client.py</code></p>"},{"location":"usage/#websocket","title":"\ud83d\udd79\ufe0f \u642d\u5efa\u4e0e\u7b2c\u4e09\u65b9\u7ec8\u7aef\u4e00\u4f53\u7684 WebSocket \u670d\u52a1\u7aef","text":"<p>\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u4ec5\u63d0\u4f9b DG-Lab WebSocket \u670d\u52a1\u7aef\u670d\u52a1\uff0c\u8fd8\u751f\u6210\u4e86\u4e00\u4e2a\u672c\u5730\u7ec8\u7aef\u53ef\u4f9b App \u8fde\u63a5\u3002</p> <p>Tip</p> <p>\u4e0d\u7ba1\u662f\u672c\u5730\u7ec8\u7aef <code>DGLabLocalClient</code> \u8fd8\u662f WebSocket \u7ec8\u7aef <code>DGLabWSClient</code>\uff0c \u5305\u542b\u7684\u4e3b\u8981\u65b9\u6cd5\u90fd\u76f8\u540c\uff0c\u56e0\u6b64\u5728\u8be5\u6bb5\u4ee3\u7801\u4e2d\uff0c\u7ec8\u7aef\u76f8\u5173\u7684\u903b\u8f91\u4e0e\u4e0a\u9762\u7684\u72ec\u7acb\u7684 WebSocket \u7ec8\u7aef\u7684\u5b9e\u73b0\u57fa\u672c\u76f8\u540c\u3002 \u8fd9\u79cd\u65b9\u5f0f\uff0c\u7701\u53bb\u4e86\u7ec8\u7aef\u8fde\u63a5 WebSocket \u670d\u52a1\u7aef\u7684\u73af\u8282\uff0c\u7ec8\u7aef\u4e0e WebSocket \u670d\u52a1\u7aef\u4e00\u4f53\uff0c\u7f51\u7edc\u5ef6\u8fdf\u66f4\u4f4e\uff0c\u90e8\u7f72\u66f4\u65b9\u4fbf\u3002</p> <pre><code>import asyncio\nfrom pydglab_ws import DGLabWSServer\n\ndef print_qrcode(_: str):\n    \"\"\"\u8f93\u51fa\u4e8c\u7ef4\u7801\u5230\u7ec8\u7aef\u754c\u9762\"\"\"\n    ...\n\nasync def main():\n    async with DGLabWSServer(\"0.0.0.0\", 5678, 60) as server:\n        client = server.new_local_client()\n\n        url = client.get_qrcode(\"ws://192.168.1.161:5678\") # (1)\n        print(\"\u8bf7\u7528 DG-Lab App \u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u8fde\u63a5\")\n        print_qrcode(url)\n\n        # \u7b49\u5f85\u7ed1\u5b9a\n        await client.bind()\n        print(f\"\u5df2\u4e0e App {client.target_id} \u6210\u529f\u7ed1\u5b9a\")\n\n        # \u4ece App \u63a5\u6536\u6570\u636e\u66f4\u65b0\uff0c\u5e76\u8fdb\u884c\u8fdc\u63a7\u64cd\u4f5c\n        async for data in client.data_generator():\n            print(f\"\u6536\u53d6\u5230\u6570\u636e\uff1a{data}\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> <ol> <li>\u6b64\u5904\u7684 URI \u9700\u8981\u662f DG-Lab \u53ef\u4ee5\u8fde\u63a5\u4e0a\u7684\uff0c\u901a\u5e38\u662f\u5185\u7f51\u6216\u516c\u7f51\uff0c\u800c\u4e0d\u662f\u672c\u5730\u73af\u56de\u5730\u5740</li> </ol> <p>\u66f4\u591a\u6f14\u793a\u8bf7\u67e5\u770b <code>examples/server_with_local_client.py</code></p>"},{"location":"api/enums/","title":"\u679a\u4e3e","text":"<p>\u6b64\u5904\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u91cf\u679a\u4e3e</p>"},{"location":"api/enums/#pydglab_ws.enums.__all__","title":"__all__  <code>module-attribute</code>","text":"<pre><code>__all__ = ('MessageType', 'RetCode', 'MessageDataHead', 'StrengthOperationType', 'FeedbackButton', 'Channel')\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageType","title":"MessageType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>WebSocket \u6d88\u606f\u7c7b\u578b</p> <p>Attributes:</p> Name Type Description <code>HEARTBEAT</code> <p>\u5fc3\u8df3\u5305\u6570\u636e</p> <code>BIND</code> <p>ID \u5173\u7cfb\u7ed1\u5b9a</p> <code>MSG</code> <p>\u6ce2\u5f62\u4e0b\u53d1/\u5f3a\u5ea6\u53d8\u5316/\u961f\u5217\u6e05\u7a7a\u7b49\u6570\u636e\u6307\u4ee4</p> <code>BREAK</code> <p>\u8fde\u63a5\u65ad\u5f00</p> <code>ERROR</code> <p>\u670d\u52a1\u9519\u8bef</p>"},{"location":"api/enums/#pydglab_ws.enums.MessageType.HEARTBEAT","title":"HEARTBEAT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HEARTBEAT = 'heartbeat'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageType.BIND","title":"BIND  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BIND = 'bind'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageType.MSG","title":"MSG  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MSG = 'msg'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageType.BREAK","title":"BREAK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BREAK = 'break'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageType.ERROR","title":"ERROR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ERROR = 'error'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode","title":"RetCode","text":"<p>               Bases: <code>IntEnum</code></p> <p>WebSocket \u6d88\u606f\u9519\u8bef\u7801\u679a\u4e3e</p> <p>Attributes:</p> Name Type Description <code>SUCCESS</code> <p>\u6210\u529f</p> <code>CLIENT_DISCONNECTED</code> <p>\u5bf9\u65b9\u5ba2\u6237\u7aef\u5df2\u65ad\u5f00</p> <code>INVALID_CLIENT_ID</code> <p>\u4e8c\u7ef4\u7801\u4e2d\u6ca1\u6709\u6709\u6548\u7684 <code>clientId</code></p> <code>SERVER_DELAY</code> <p>Socket \u8fde\u63a5\u4e0a\u4e86\uff0c\u4f46\u670d\u52a1\u5668\u8fdf\u8fdf\u4e0d\u4e0b\u53d1 App \u7aef\u7684 ID \u6765\u7ed1\u5b9a</p> <code>ID_ALREADY_BOUND</code> <p>\u6b64 ID \u5df2\u88ab\u5176\u4ed6\u5ba2\u6237\u7aef\u7ed1\u5b9a\u5173\u7cfb</p> <code>TARGET_CLIENT_NOT_FOUND</code> <p>\u8981\u7ed1\u5b9a\u7684\u76ee\u6807\u5ba2\u6237\u7aef\u4e0d\u5b58\u5728</p> <code>INCOMPATIBLE_RELATIONSHIP</code> <p>\u6536\u4fe1\u65b9\u548c\u5bc4\u4fe1\u65b9\u4e0d\u662f\u7ed1\u5b9a\u5173\u7cfb</p> <code>NON_JSON_CONTENT</code> <p>\u53d1\u9001\u7684\u5185\u5bb9\u4e0d\u662f\u6807\u51c6 JSON \u5bf9\u8c61</p> <code>RECIPIENT_NOT_FOUND</code> <p>\u672a\u627e\u5230\u6536\u4fe1\u4eba\uff08\u79bb\u7ebf\uff09</p> <code>MESSAGE_TOO_LONG</code> <p>\u4e0b\u53d1\u7684 <code>message</code> \u957f\u5ea6\u5927\u4e8e 1950</p> <code>SERVER_INTERNAL_ERROR</code> <p>\u670d\u52a1\u5668\u5185\u90e8\u5f02\u5e38</p>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.SUCCESS","title":"SUCCESS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SUCCESS = 200\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.CLIENT_DISCONNECTED","title":"CLIENT_DISCONNECTED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CLIENT_DISCONNECTED = 209\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.INVALID_CLIENT_ID","title":"INVALID_CLIENT_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>INVALID_CLIENT_ID = 210\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.SERVER_DELAY","title":"SERVER_DELAY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SERVER_DELAY = 211\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.ID_ALREADY_BOUND","title":"ID_ALREADY_BOUND  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ID_ALREADY_BOUND = 400\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.TARGET_CLIENT_NOT_FOUND","title":"TARGET_CLIENT_NOT_FOUND  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TARGET_CLIENT_NOT_FOUND = 401\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.INCOMPATIBLE_RELATIONSHIP","title":"INCOMPATIBLE_RELATIONSHIP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>INCOMPATIBLE_RELATIONSHIP = 402\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.NON_JSON_CONTENT","title":"NON_JSON_CONTENT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>NON_JSON_CONTENT = 403\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.RECIPIENT_NOT_FOUND","title":"RECIPIENT_NOT_FOUND  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>RECIPIENT_NOT_FOUND = 404\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.MESSAGE_TOO_LONG","title":"MESSAGE_TOO_LONG  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MESSAGE_TOO_LONG = 405\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.RetCode.SERVER_INTERNAL_ERROR","title":"SERVER_INTERNAL_ERROR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SERVER_INTERNAL_ERROR = 500\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead","title":"MessageDataHead","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>WebSocket \u6d88\u606f\u6570\u636e\u5f00\u5934\u90e8\u5206</p> <p>Attributes:</p> Name Type Description <code>TARGET_ID</code> <p>Socket \u901a\u9053\u4e0e\u7ec8\u7aef\u7ed1\u5b9a</p> <code>DG_LAB</code> <p>\u5173\u7cfb\u7ed1\u5b9a</p> <code>STRENGTH</code> <p>\u5f3a\u5ea6\u64cd\u4f5c</p> <code>PULSE</code> <p>\u6ce2\u5f62\u64cd\u4f5c</p> <code>CLEAR</code> <p>\u6e05\u7a7a\u6ce2\u5f62\u961f\u5217</p> <code>FEEDBACK</code> <p>App \u53cd\u9988</p>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead.TARGET_ID","title":"TARGET_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TARGET_ID = 'targetId'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead.DG_LAB","title":"DG_LAB  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DG_LAB = 'DGLAB'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead.STRENGTH","title":"STRENGTH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>STRENGTH = 'strength'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead.PULSE","title":"PULSE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PULSE = 'pulse'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead.CLEAR","title":"CLEAR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CLEAR = 'clear'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.MessageDataHead.FEEDBACK","title":"FEEDBACK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>FEEDBACK = 'feedback'\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.StrengthOperationType","title":"StrengthOperationType","text":"<p>               Bases: <code>IntEnum</code></p> <p>\u5f3a\u5ea6\u53d8\u5316\u6a21\u5f0f</p> <p>Attributes:</p> Name Type Description <code>DECREASE</code> <p>\u901a\u9053\u5f3a\u5ea6\u51cf\u5c11</p> <code>INCREASE</code> <p>\u901a\u9053\u5f3a\u5ea6\u589e\u52a0</p> <code>SET_TO</code> <p>\u901a\u9053\u5f3a\u5ea6\u53d8\u5316\u4e3a\u6307\u5b9a\u6570\u503c</p>"},{"location":"api/enums/#pydglab_ws.enums.StrengthOperationType.DECREASE","title":"DECREASE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DECREASE = 0\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.StrengthOperationType.INCREASE","title":"INCREASE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>INCREASE = 1\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.StrengthOperationType.SET_TO","title":"SET_TO  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SET_TO = 2\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton","title":"FeedbackButton","text":"<p>               Bases: <code>IntEnum</code></p> <p>App \u53cd\u9988\u6309\u94ae</p> <ul> <li>A \u901a\u9053 5 \u4e2a\u6309\u94ae\uff08\u4ece\u5de6\u81f3\u53f3\uff09\u7684\u89d2\u6807\u4e3a 0,1,2,3,4</li> <li>B \u901a\u9053 5 \u4e2a\u6309\u94ae\uff08\u4ece\u5de6\u81f3\u53f3\uff09\u7684\u89d2\u6807\u4e3a 5,6,7,8,9</li> </ul>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.A1","title":"A1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>A1 = 0\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.A2","title":"A2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>A2 = 1\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.A3","title":"A3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>A3 = 2\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.A4","title":"A4  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>A4 = 3\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.A5","title":"A5  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>A5 = 4\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.B1","title":"B1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>B1 = 5\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.B2","title":"B2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>B2 = 6\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.B3","title":"B3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>B3 = 7\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.B4","title":"B4  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>B4 = 8\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.FeedbackButton.B5","title":"B5  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>B5 = 9\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.Channel","title":"Channel","text":"<p>               Bases: <code>IntEnum</code></p> <p>\u901a\u9053</p> <p>Attributes:</p> Name Type Description <code>A</code> <p>A \u901a\u9053</p> <code>B</code> <p>B \u901a\u9053</p>"},{"location":"api/enums/#pydglab_ws.enums.Channel.A","title":"A  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>A = 1\n</code></pre>"},{"location":"api/enums/#pydglab_ws.enums.Channel.B","title":"B  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>B = 2\n</code></pre>"},{"location":"api/exceptions/","title":"\u5f02\u5e38","text":"<p>\u6b64\u5904\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5f02\u5e38\u7c7b</p>"},{"location":"api/exceptions/#pydglab_ws.exceptions.InvalidStrengthData","title":"InvalidStrengthData","text":"<pre><code>InvalidStrengthData(strength_data: str)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>\u5f3a\u5ea6\u6570\u636e\u4e0d\u5408\u6cd5</p> Source code in <code>pydglab_ws/exceptions.py</code> <pre><code>def __init__(self, strength_data: str):\n    super().__init__(f\"Invalid strength data: {strength_data}\")\n</code></pre>"},{"location":"api/exceptions/#pydglab_ws.exceptions.InvalidFeedbackData","title":"InvalidFeedbackData","text":"<pre><code>InvalidFeedbackData(feedback_data: str)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>App \u53cd\u9988\u6309\u94ae\u6570\u636e\u4e0d\u5408\u6cd5</p> Source code in <code>pydglab_ws/exceptions.py</code> <pre><code>def __init__(self, feedback_data: str):\n    super().__init__(f\"Invalid strength data: {feedback_data}\")\n</code></pre>"},{"location":"api/exceptions/#pydglab_ws.exceptions.InvalidPulseOperation","title":"InvalidPulseOperation","text":"<pre><code>InvalidPulseOperation(pulse_operation: Any)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>\u6ce2\u5f62\u64cd\u4f5c\u6570\u636e\u4e0d\u5408\u6cd5</p> Source code in <code>pydglab_ws/exceptions.py</code> <pre><code>def __init__(self, pulse_operation: Any):\n    super().__init__(f\"Invalid pulse operation: {pulse_operation}\")\n</code></pre>"},{"location":"api/models/","title":"\u6570\u636e\u6a21\u578b","text":"<p>\u6b64\u5904\u5b9a\u4e49\u4e86\u4e00\u4e9b Pydantic \u6a21\u578b\uff0c\u4f7f\u7528 Pydantic V2</p>"},{"location":"api/models/#pydglab_ws.models.WebSocketMessage","title":"WebSocketMessage","text":"<p>               Bases: <code>BaseModel</code></p> <p>WebSocket \u6d88\u606f</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>MessageType</code> <p>\u6d88\u606f\u7c7b\u578b</p> <code>client_id</code> <code>Optional[UUID4]</code> <p>\u7b2c\u4e09\u65b9\u7ec8\u7aef ID</p> <code>target_id</code> <code>Optional[UUID4]</code> <p>App ID</p> <code>message</code> <code>Union[str, RetCode, MessageDataHead]</code> <p>\u6d88\u606f / \u6307\u4ee4</p>"},{"location":"api/models/#pydglab_ws.models.StrengthData","title":"StrengthData","text":"<p>               Bases: <code>BaseModel</code></p> <p>\u5f3a\u5ea6\u6570\u636e</p> <p>Attributes:</p> Name Type Description <code>a</code> <code>int</code> <p>A \u901a\u9053\u5f3a\u5ea6</p> <code>b</code> <code>int</code> <p>B \u901a\u9053\u5f3a\u5ea6</p> <code>a_limit</code> <code>int</code> <p>A \u901a\u9053\u5f3a\u5ea6\u4e0a\u9650</p> <code>b_limit</code> <code>int</code> <p>B \u901a\u9053\u5f3a\u5ea6\u4e0a\u9650</p>"},{"location":"api/typing/","title":"\u81ea\u5b9a\u4e49\u7c7b\u578b","text":"<p>\u6b64\u5904\u521b\u5efa\u4e86\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7c7b\u578b</p>"},{"location":"api/typing/#pydglab_ws.typing.WaveformFrequency","title":"WaveformFrequency  <code>module-attribute</code>","text":"<pre><code>WaveformFrequency = NewType('WaveformFrequency', int)\n</code></pre> <p>\u6ce2\u5f62\u9891\u7387</p>"},{"location":"api/typing/#pydglab_ws.typing.WaveformStrength","title":"WaveformStrength  <code>module-attribute</code>","text":"<pre><code>WaveformStrength = NewType('WaveformStrength', int)\n</code></pre> <p>\u6ce2\u5f62\u5f3a\u5ea6</p>"},{"location":"api/typing/#pydglab_ws.typing.PulseOperation","title":"PulseOperation  <code>module-attribute</code>","text":"<pre><code>PulseOperation = NewType('PulseOperation', Tuple[WaveformFrequencyOperation, WaveformStrengthOperation])\n</code></pre> <p>\u6ce2\u5f62\u64cd\u4f5c\u6570\u636e\uff0c\u7c7b\u4f3c DG-Lab-V3 \u84dd\u7259\u534f\u8bae\u4e2d\u7684\u6ce2\u5f62\u6570\u636e</p>"},{"location":"api/utils/","title":"\u5de5\u5177\u51fd\u6570","text":"<p>\u6b64\u5904\u63d0\u4f9b\u4e00\u4e9b\u5de5\u5177\u51fd\u6570</p>"},{"location":"api/utils/#pydglab_ws.utils.parse_strength_data","title":"parse_strength_data","text":"<pre><code>parse_strength_data(data: str) -&gt; StrengthData\n</code></pre> <p>\u89e3\u6790\u6d88\u606f\u4e2d\u7684\u5f3a\u5ea6\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>str</code> <p>WebSocket \u6d88\u606f\u4e2d\u7684 <code>message</code></p> required <p>Raises:</p> Type Description <code>InvalidStrengthData</code> <p><code>InvalidStrengthData</code></p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def parse_strength_data(data: str) -&gt; StrengthData:\n    \"\"\"\n    \u89e3\u6790\u6d88\u606f\u4e2d\u7684\u5f3a\u5ea6\u6570\u636e\n\n    :param data: WebSocket \u6d88\u606f\u4e2d\u7684 ``message``\n    :raise InvalidStrengthData: [`InvalidStrengthData`][pydglab_ws.exceptions.InvalidStrengthData]\n    \"\"\"\n    try:\n        values = data.split(\"-\")[1].split(\"+\")\n        return StrengthData(\n            a=int(values[0]),\n            b=int(values[1]),\n            a_limit=int(values[2]),\n            b_limit=int(values[3]),\n        )\n    except (IndexError, ValueError) as e:\n        raise InvalidStrengthData(data) from e\n</code></pre>"},{"location":"api/utils/#pydglab_ws.utils.parse_feedback_data","title":"parse_feedback_data","text":"<pre><code>parse_feedback_data(data: str) -&gt; FeedbackButton\n</code></pre> <p>\u89e3\u6790\u6d88\u606f\u4e2d\u7684 App \u53cd\u9988\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>str</code> <p>WebSocket \u6d88\u606f\u4e2d\u7684 <code>message</code></p> required <p>Raises:</p> Type Description <code>InvalidFeedbackData</code> <p><code>InvalidFeedbackData</code></p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def parse_feedback_data(data: str) -&gt; FeedbackButton:\n    \"\"\"\n    \u89e3\u6790\u6d88\u606f\u4e2d\u7684 App \u53cd\u9988\u6570\u636e\n\n    :param data: WebSocket \u6d88\u606f\u4e2d\u7684 ``message``\n    :raise InvalidFeedbackData: [`InvalidFeedbackData`][pydglab_ws.exceptions.InvalidFeedbackData]\n    \"\"\"\n    try:\n        return FeedbackButton(int(data.split(\"-\")[1]))\n    except IndexError as e:\n        raise InvalidFeedbackData(data) from e\n</code></pre>"},{"location":"api/utils/#pydglab_ws.utils.dump_strength_operation","title":"dump_strength_operation","text":"<pre><code>dump_strength_operation(channel: Channel, operation_type: StrengthOperationType, value: int) -&gt; str\n</code></pre> <p>\u751f\u6210\u5f3a\u5ea6\u64cd\u4f5c\u7684\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>Channel</code> <p>\u901a\u9053\u9009\u62e9</p> required <code>operation_type</code> <code>StrengthOperationType</code> <p>\u5f3a\u5ea6\u53d8\u5316\u6a21\u5f0f</p> required <code>value</code> <code>int</code> <p>\u5f3a\u5ea6\u6570\u503c\uff0c\u8303\u56f4\u5728 [0, 200]</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u8fd4\u56de\u6570\u636e\u53ef\u4f5c\u4e3a WebSocket \u6d88\u606f\u4e2d\u7684 <code>message</code></p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def dump_strength_operation(\n        channel: Channel,\n        operation_type: StrengthOperationType,\n        value: int\n) -&gt; str:\n    \"\"\"\n    \u751f\u6210\u5f3a\u5ea6\u64cd\u4f5c\u7684\u6570\u636e\n\n    :param channel: \u901a\u9053\u9009\u62e9\n    :param operation_type: \u5f3a\u5ea6\u53d8\u5316\u6a21\u5f0f\n    :param value: \u5f3a\u5ea6\u6570\u503c\uff0c\u8303\u56f4\u5728 [0, 200]\n    :return: \u8fd4\u56de\u6570\u636e\u53ef\u4f5c\u4e3a WebSocket \u6d88\u606f\u4e2d\u7684 ``message``\n    \"\"\"\n    return f\"{MessageDataHead.STRENGTH.value}-{channel.value}+{operation_type.value}+{value}\"\n</code></pre>"},{"location":"api/utils/#pydglab_ws.utils.dump_clear_pulses","title":"dump_clear_pulses","text":"<pre><code>dump_clear_pulses(channel: Channel) -&gt; str\n</code></pre> <p>\u751f\u6210\u6ce2\u5f62\u6e05\u7a7a\u64cd\u4f5c\u7684\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>Channel</code> <p>\u901a\u9053\u9009\u62e9</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u8fd4\u56de\u6570\u636e\u53ef\u4f5c\u4e3a WebSocket \u6d88\u606f\u4e2d\u7684 <code>message</code></p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def dump_clear_pulses(channel: Channel) -&gt; str:\n    \"\"\"\n    \u751f\u6210\u6ce2\u5f62\u6e05\u7a7a\u64cd\u4f5c\u7684\u6570\u636e\n\n    :param channel: \u901a\u9053\u9009\u62e9\n    :return: \u8fd4\u56de\u6570\u636e\u53ef\u4f5c\u4e3a WebSocket \u6d88\u606f\u4e2d\u7684 ``message``\n    \"\"\"\n    return f\"{MessageDataHead.CLEAR.value}-{channel.value}\"\n</code></pre>"},{"location":"api/utils/#pydglab_ws.utils.dump_pulse_operation","title":"dump_pulse_operation","text":"<pre><code>dump_pulse_operation(pulse: PulseOperation) -&gt; str\n</code></pre> <p>\u751f\u6210\u6ce2\u5f62\u64cd\u4f5c\u7684\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>pulse</code> <code>PulseOperation</code> <p>\u6ce2\u5f62\u64cd\u4f5c\u6570\u636e</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u8fd4\u56de\u6570\u636e\u4e0e\u84dd\u7259\u534f\u8bae\u7c7b\u4f3c</p> <p>Raises:</p> Type Description <code>InvalidPulseOperation</code> <p><code>InvalidPulseOperation</code></p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def dump_pulse_operation(pulse: PulseOperation) -&gt; str:\n    \"\"\"\n    \u751f\u6210\u6ce2\u5f62\u64cd\u4f5c\u7684\u6570\u636e\n\n    :param pulse: \u6ce2\u5f62\u64cd\u4f5c\u6570\u636e\n    :return: \u8fd4\u56de\u6570\u636e\u4e0e\u84dd\u7259\u534f\u8bae\u7c7b\u4f3c\n    :raise InvalidPulseOperation: [`InvalidPulseOperation`][pydglab_ws.exceptions.InvalidPulseOperation]\n    \"\"\"\n    try:\n        pulse_bytes = bytes().join(\n            # int.to_bytes Python 3.11 \u624d\u6dfb\u52a0\u4e86 length, byteorder \u7684\u9ed8\u8ba4\u53c2\u6570\u503c\n            value.to_bytes(\n                length=1,\n                byteorder='big'\n            ) for operation in pulse for value in operation\n        )\n    except (TypeError, AttributeError, OverflowError) as e:\n        raise InvalidPulseOperation(pulse) from e\n    else:\n        return pulse_bytes.hex()\n</code></pre>"},{"location":"api/utils/#pydglab_ws.utils.dump_add_pulses","title":"dump_add_pulses","text":"<pre><code>dump_add_pulses(channel: Channel, *pulses: PulseOperation) -&gt; str\n</code></pre> <p>\u751f\u6210\u4e0b\u653e\u6ce2\u5f62\u64cd\u4f5c\u7684\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>Channel</code> <p>\u901a\u9053\u9009\u62e9</p> required <code>pulses</code> <code>PulseOperation</code> <p>\u6ce2\u5f62\u64cd\u4f5c\u6570\u636e</p> <code>()</code> <p>Returns:</p> Type Description <code>str</code> <p>\u8fd4\u56de\u6570\u636e\u53ef\u4f5c\u4e3a WebSocket \u6d88\u606f\u4e2d\u7684 <code>message</code></p> <p>Raises:</p> Type Description <code>InvalidPulseOperation</code> <p><code>InvalidPulseOperation</code></p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def dump_add_pulses(\n        channel: Channel,\n        *pulses: PulseOperation\n) -&gt; str:\n    \"\"\"\n    \u751f\u6210\u4e0b\u653e\u6ce2\u5f62\u64cd\u4f5c\u7684\u6570\u636e\n\n    :param channel: \u901a\u9053\u9009\u62e9\n    :param pulses: \u6ce2\u5f62\u64cd\u4f5c\u6570\u636e\n    :return: \u8fd4\u56de\u6570\u636e\u53ef\u4f5c\u4e3a WebSocket \u6d88\u606f\u4e2d\u7684 ``message``\n    :raise InvalidPulseOperation: [`InvalidPulseOperation`][pydglab_ws.exceptions.InvalidPulseOperation]\n    \"\"\"\n    dict_data = {\n        f\"{MessageDataHead.PULSE.value}-{channel.value}\": [dump_pulse_operation(pulse) for pulse in pulses]\n    }\n    return json.dumps(dict_data)\n</code></pre>"},{"location":"api/utils/#pydglab_ws.utils.dg_lab_client_qrcode","title":"dg_lab_client_qrcode","text":"<pre><code>dg_lab_client_qrcode(uri: str, client_id: UUID4) -&gt; str\n</code></pre> <p>\u751f\u6210\u7ec8\u7aef\u4e8c\u7ef4\u7801\uff0c\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u751f\u6210</p> <p>Parameters:</p> Name Type Description Default <code>uri</code> <code>str</code> <p>WebSocket \u670d\u52a1\u7aef URI\uff0c\u4f8b\u5982\uff1a<code>ws://107.47.91.92:4567</code> \uff08\u6ce8\u610f\u672b\u5c3e\u4e0d\u80fd\u6709 <code>/</code>\uff09</p> required <code>client_id</code> <code>UUID4</code> <p>\u7ec8\u7aef ID</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u7ec8\u7aef\u4e8c\u7ef4\u7801\u5185\u5bb9\uff0c\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u751f\u6210</p> Source code in <code>pydglab_ws/utils.py</code> <pre><code>def dg_lab_client_qrcode(uri: str, client_id: UUID4) -&gt; str:\n    \"\"\"\n    \u751f\u6210\u7ec8\u7aef\u4e8c\u7ef4\u7801\uff0c\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u751f\u6210\n\n    :param uri: WebSocket \u670d\u52a1\u7aef URI\uff0c\u4f8b\u5982\uff1a``ws://107.47.91.92:4567``\n            \uff08\u6ce8\u610f\u672b\u5c3e\u4e0d\u80fd\u6709 ``/``\uff09\n    :param client_id: \u7ec8\u7aef ID\n    :return: \u7ec8\u7aef\u4e8c\u7ef4\u7801\u5185\u5bb9\uff0c\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u751f\u6210\n    \"\"\"\n    return (f\"https://www.dungeon-lab.com/app-download.php\"\n            f\"#DGLAB-SOCKET\"\n            f\"#{uri}/{client_id}\")\n</code></pre>"},{"location":"api/client/base/","title":"DG-Lab \u7ec8\u7aef","text":""},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient","title":"DGLabClient","text":"<pre><code>DGLabClient(client_id: UUID4 = None, target_id: UUID4 = None)\n</code></pre> <p>               Bases: <code>ABC</code></p> <p>DG-Lab \u7ec8\u7aef\u57fa\u7840\u7c7b</p> <p>Parameters:</p> Name Type Description Default <code>client_id</code> <code>UUID4</code> <p>\u7ec8\u7aef ID</p> <code>None</code> <code>target_id</code> <code>UUID4</code> <p>App ID</p> <code>None</code> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>def __init__(\n        self,\n        client_id: UUID4 = None,\n        target_id: UUID4 = None\n):\n    self._client_id: Optional[UUID4] = client_id\n    self._target_id: Optional[UUID4] = target_id\n    self._message_type_to_handler: Dict[\n        MessageType,\n        Callable[[WebSocketMessage], Any]\n    ] = {\n        MessageType.MSG: self._handle_msg,\n        MessageType.BREAK: self._handle_break,\n        MessageType.HEARTBEAT: self._handle_heartbeat\n    }\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.client_id","title":"client_id  <code>property</code>","text":"<pre><code>client_id: Optional[UUID4]\n</code></pre> <p>DG-Lab \u7ec8\u7aef ID</p>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.target_id","title":"target_id  <code>property</code>","text":"<pre><code>target_id: Optional[UUID4]\n</code></pre> <p>DG-Lab App ID</p>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.not_registered","title":"not_registered  <code>property</code>","text":"<pre><code>not_registered: bool\n</code></pre> <p>\u7ec8\u7aef\u662f\u5426\u672a\u6ce8\u518c</p>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.not_bind","title":"not_bind  <code>property</code>","text":"<pre><code>not_bind: bool\n</code></pre> <p>\u7ec8\u7aef\u662f\u5426\u672a\u5b8c\u6210\u4e0e App \u7684\u7ed1\u5b9a</p>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.get_qrcode","title":"get_qrcode","text":"<pre><code>get_qrcode(uri: str) -&gt; Optional[str]\n</code></pre> <p>\u7ec8\u7aef\u4e8c\u7ef4\u7801\uff0c\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u751f\u6210</p> <p>Parameters:</p> Name Type Description Default <code>uri</code> <code>str</code> <p>WebSocket \u670d\u52a1\u7aef URI\uff0c\u4f8b\u5982\uff1a<code>ws://107.47.91.92:4567</code> \uff08\u6ce8\u610f\u672b\u5c3e\u4e0d\u80fd\u6709 <code>/</code>\uff09</p> required <p>Returns:</p> Type Description <code>Optional[str]</code> <p>URL \u5b57\u7b26\u4e32\uff0c\u5982\u679c\u9700\u8981\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u4ece\u8fd4\u56de\u7684\u6587\u672c\u8fdb\u884c\u751f\u6210</p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>def get_qrcode(self, uri: str) -&gt; Optional[str]:\n    \"\"\"\n    \u7ec8\u7aef\u4e8c\u7ef4\u7801\uff0c\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u751f\u6210\n\n    :param uri: WebSocket \u670d\u52a1\u7aef URI\uff0c\u4f8b\u5982\uff1a``ws://107.47.91.92:4567``\n        \uff08\u6ce8\u610f\u672b\u5c3e\u4e0d\u80fd\u6709 ``/``\uff09\n    :return: URL \u5b57\u7b26\u4e32\uff0c\u5982\u679c\u9700\u8981\u4e8c\u7ef4\u7801\u56fe\u50cf\u9700\u8981\u81ea\u884c\u4ece\u8fd4\u56de\u7684\u6587\u672c\u8fdb\u884c\u751f\u6210\n    \"\"\"\n    if uri is None or self.not_registered:\n        return None\n    return dg_lab_client_qrcode(uri, self._client_id)\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.register","title":"register  <code>async</code>","text":"<pre><code>register()\n</code></pre> <p>\u4ece WebSocket \u670d\u52a1\u7aef\u4e2d\u83b7\u53d6 <code>client_id</code> \u5e76\u4fdd\u5b58</p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def register(self):\n    \"\"\"\n    \u4ece WebSocket \u670d\u52a1\u7aef\u4e2d\u83b7\u53d6 ``client_id`` \u5e76\u4fdd\u5b58\n    \"\"\"\n    while self.not_registered:\n        message = await self._recv()\n        if message.type == MessageType.BIND and message.message == MessageDataHead.TARGET_ID:\n            self._client_id = message.client_id\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.ensure_bind","title":"ensure_bind  <code>async</code>","text":"<pre><code>ensure_bind()\n</code></pre> <p>\u786e\u4fdd\u7ec8\u7aef\u5df2\u5b8c\u6210\u4e0e App \u7684\u7ed1\u5b9a</p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def ensure_bind(self):\n    \"\"\"\u786e\u4fdd\u7ec8\u7aef\u5df2\u5b8c\u6210\u4e0e App \u7684\u7ed1\u5b9a\"\"\"\n    while True:\n        if self.not_registered:\n            await self.register()\n        elif self.not_bind:\n            await self.bind()\n        else:\n            break\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.bind","title":"bind  <code>async</code>","text":"<pre><code>bind() -&gt; RetCode\n</code></pre> <p>\u7b49\u5f85\u4e0e DG-Lab App \u7684\u5173\u7cfb\u7ed1\u5b9a\uff0c\u5e76\u4fdd\u5b58 <code>target_id</code></p> <p>Returns:</p> Type Description <code>RetCode</code> <p>\u54cd\u5e94\u7801</p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def bind(self) -&gt; RetCode:\n    \"\"\"\n    \u7b49\u5f85\u4e0e DG-Lab App \u7684\u5173\u7cfb\u7ed1\u5b9a\uff0c\u5e76\u4fdd\u5b58 ``target_id``\n    :return: \u54cd\u5e94\u7801\n    \"\"\"\n    while self.not_bind:\n        message = await self._recv_owned()\n        if message.type == MessageType.BIND and isinstance(message.message, RetCode):\n            if message.message == RetCode.SUCCESS:\n                self._target_id = message.target_id\n            return message.message\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.recv_data","title":"recv_data  <code>async</code>","text":"<pre><code>recv_data() -&gt; Union[StrengthData, FeedbackButton, RetCode]\n</code></pre> <p>\u83b7\u53d6 WebSocket \u670d\u52a1\u7aef\u7684\u6570\u636e</p> <p>\u6ce8\u610f\uff0c\u83b7\u53d6\u5230\u7684\u662f\u961f\u5217\u4e2d\u6700\u65e9\u7684\u6570\u636e\uff0c\u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684</p> <p>Returns:</p> Type Description <code>Union[StrengthData, FeedbackButton, RetCode]</code> <p>\u53ef\u80fd\u4e3a \u5f3a\u5ea6\u6570\u636e - <code>StrengthData</code>\u3001             App \u53cd\u9988\u6570\u636e - <code>FeedbackButton</code>             \u3001\u5fc3\u8df3 - <code>RetCode.SUCCESS</code>\u3001             App \u65ad\u5f00\u8fde\u63a5 - <code>RetCode.CLIENT_DISCONNECTED</code></p> <p>Raises:</p> Type Description <code>InvalidStrengthData</code> <p><code>InvalidStrengthData</code></p> <code>InvalidFeedbackData</code> <p><code>InvalidFeedbackData</code></p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def recv_data(self) -&gt; Union[StrengthData, FeedbackButton, RetCode]:\n    \"\"\"\n    \u83b7\u53d6 WebSocket \u670d\u52a1\u7aef\u7684\u6570\u636e\n\n    \u6ce8\u610f\uff0c\u83b7\u53d6\u5230\u7684\u662f\u961f\u5217\u4e2d\u6700\u65e9\u7684\u6570\u636e\uff0c\u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684\n\n    :return: \u53ef\u80fd\u4e3a **\u5f3a\u5ea6\u6570\u636e** - [`StrengthData`][pydglab_ws.models.StrengthData]\u3001 \\\n        **App \u53cd\u9988\u6570\u636e** - [`FeedbackButton`][pydglab_ws.enums.FeedbackButton] \\\n        \u3001**\u5fc3\u8df3** - [`RetCode.SUCCESS`][pydglab_ws.enums.RetCode]\u3001 \\\n        **App \u65ad\u5f00\u8fde\u63a5** - [`RetCode.CLIENT_DISCONNECTED`][pydglab_ws.enums.RetCode]\n    :raise InvalidStrengthData: [`InvalidStrengthData`][pydglab_ws.exceptions.InvalidStrengthData]\n    :raise InvalidFeedbackData: [`InvalidFeedbackData`][pydglab_ws.exceptions.InvalidFeedbackData]\n    \"\"\"\n    await self.ensure_bind()\n    while True:\n        message = await self._recv_owned()\n        handler = self._message_type_to_handler.get(message.type)\n        if handler and (result := handler(message)) is not None:\n            return result\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.data_generator","title":"data_generator  <code>async</code>","text":"<pre><code>data_generator(*targets: _DataType) -&gt; AsyncGenerator[_DataType, Any]\n</code></pre> <p>\u5f3a\u5ea6\u6570\u636e\u5f02\u6b65\u751f\u6210\u5668</p> <p>\u6ce8\u610f\uff0c\u662f\u4ece\u961f\u5217\u4e2d\u6700\u65e9\u7684\u6570\u636e\u5f00\u59cb\u83b7\u53d6\uff0c\u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684</p> <p>\u793a\u4f8b\uff1a <pre><code>async for data in client.data_generator(StrengthData, FeedbackButton):\n    print(f\"Got data from App: {data}\")\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>targets</code> <code>_DataType</code> <p>\u76ee\u6807\u7c7b\u578b\uff0c\u53ea\u6709\u4e3a\u76ee\u6807\u7c7b\u578b\u7684\u6570\u636e\u4f1a\u88ab\u8fd4\u56de\uff0c\u4e3a\u7a7a\u5373\u9ed8\u8ba4\u503c\u65f6\u5219\u4e0d\u8fdb\u884c\u9650\u5236</p> <code>()</code> <p>Returns:</p> Type Description <code>AsyncGenerator[_DataType, Any]</code> <p>\u53ef\u80fd\u4e3a \u5f3a\u5ea6\u6570\u636e - <code>StrengthData</code>\u3001             App \u53cd\u9988\u6570\u636e - <code>FeedbackButton</code>             \u3001\u5fc3\u8df3 - <code>RetCode.SUCCESS</code>\u3001App \u65ad\u5f00\u8fde\u63a5 - <code>RetCode.CLIENT_DISCONNECTED</code></p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def data_generator(\n        self,\n        *targets: _DataType,\n) -&gt; AsyncGenerator[_DataType, Any]:\n    \"\"\"\n    \u5f3a\u5ea6\u6570\u636e\u5f02\u6b65\u751f\u6210\u5668\n\n    \u6ce8\u610f\uff0c\u662f\u4ece\u961f\u5217\u4e2d\u6700\u65e9\u7684\u6570\u636e\u5f00\u59cb\u83b7\u53d6\uff0c\u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684\n\n    \u793a\u4f8b\uff1a\n    ```python3\n    async for data in client.data_generator(StrengthData, FeedbackButton):\n        print(f\"Got data from App: {data}\")\n    ```\n    :param targets: \u76ee\u6807\u7c7b\u578b\uff0c\u53ea\u6709\u4e3a\u76ee\u6807\u7c7b\u578b\u7684\u6570\u636e\u4f1a\u88ab\u8fd4\u56de\uff0c\u4e3a\u7a7a\u5373\u9ed8\u8ba4\u503c\u65f6\u5219\u4e0d\u8fdb\u884c\u9650\u5236\n    :return: \u53ef\u80fd\u4e3a **\u5f3a\u5ea6\u6570\u636e** - [`StrengthData`][pydglab_ws.models.StrengthData]\u3001 \\\n        **App \u53cd\u9988\u6570\u636e** - [`FeedbackButton`][pydglab_ws.enums.FeedbackButton] \\\n        \u3001**\u5fc3\u8df3** - ``RetCode.SUCCESS``\u3001**App \u65ad\u5f00\u8fde\u63a5** - ``RetCode.CLIENT_DISCONNECTED``\n    \"\"\"\n    while True:\n        data = await self.recv_data()\n        if not targets or type(data) in targets:\n            yield data\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.set_strength","title":"set_strength  <code>async</code>","text":"<pre><code>set_strength(channel: Channel, operation_type: StrengthOperationType, value: int)\n</code></pre> <p>\u8bbe\u7f6e\u5f3a\u5ea6</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>Channel</code> <p>\u901a\u9053\u9009\u62e9</p> required <code>operation_type</code> <code>StrengthOperationType</code> <p>\u5f3a\u5ea6\u53d8\u5316\u6a21\u5f0f</p> required <code>value</code> <code>int</code> <p>\u5f3a\u5ea6\u6570\u503c\uff0c\u8303\u56f4\u5728 [0, 200]</p> required Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def set_strength(\n        self,\n        channel: Channel,\n        operation_type: StrengthOperationType,\n        value: int\n):\n    \"\"\"\n    \u8bbe\u7f6e\u5f3a\u5ea6\n\n    :param channel: \u901a\u9053\u9009\u62e9\n    :param operation_type: \u5f3a\u5ea6\u53d8\u5316\u6a21\u5f0f\n    :param value: \u5f3a\u5ea6\u6570\u503c\uff0c\u8303\u56f4\u5728 [0, 200]\n    \"\"\"\n    await self.ensure_bind()\n    await self._send_owned(\n        MessageType.MSG,\n        dump_strength_operation(channel, operation_type, value)\n    )\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.add_pulses","title":"add_pulses  <code>async</code>","text":"<pre><code>add_pulses(channel: Channel, *pulses: PulseOperation)\n</code></pre> <p>\u4e0b\u53d1\u6ce2\u5f62\u6570\u636e</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>Channel</code> <p>\u901a\u9053\u9009\u62e9</p> required <code>pulses</code> <code>PulseOperation</code> <p>\u6ce2\u5f62\u64cd\u4f5c\u6570\u636e\uff0c\u6700\u5927\u957f\u5ea6\u4e3a 100</p> <code>()</code> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def add_pulses(\n        self,\n        channel: Channel,\n        *pulses: PulseOperation\n):\n    \"\"\"\n    \u4e0b\u53d1\u6ce2\u5f62\u6570\u636e\n\n    :param channel: \u901a\u9053\u9009\u62e9\n    :param pulses: \u6ce2\u5f62\u64cd\u4f5c\u6570\u636e\uff0c\u6700\u5927\u957f\u5ea6\u4e3a 100\n    \"\"\"\n    await self.ensure_bind()\n    await self._send_owned(\n        MessageType.MSG,\n        dump_add_pulses(channel, *pulses)\n    )\n</code></pre>"},{"location":"api/client/base/#pydglab_ws.client.base.DGLabClient.clear_pulses","title":"clear_pulses  <code>async</code>","text":"<pre><code>clear_pulses(channel: Channel)\n</code></pre> <p>\u6e05\u7a7a\u6ce2\u5f62\u961f\u5217</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>Channel</code> <p>\u901a\u9053\u9009\u62e9</p> required <p>Raises:</p> Type Description <code>InvalidPulseOperation</code> <p><code>InvalidPulseOperation</code></p> Source code in <code>pydglab_ws/client/base.py</code> <pre><code>async def clear_pulses(self, channel: Channel):\n    \"\"\"\n    \u6e05\u7a7a\u6ce2\u5f62\u961f\u5217\n\n    :param channel: \u901a\u9053\u9009\u62e9\n    :raise InvalidPulseOperation: [`InvalidPulseOperation`][pydglab_ws.exceptions.InvalidPulseOperation]\n    \"\"\"\n    await self.ensure_bind()\n    await self._send_owned(\n        MessageType.MSG,\n        dump_clear_pulses(channel)\n    )\n</code></pre>"},{"location":"api/client/connect/","title":"DG-Lab WebSocket \u7ec8\u7aef\u8fde\u63a5\u5668","text":""},{"location":"api/client/connect/#pydglab_ws.client.connect.DGLabWSConnect","title":"DGLabWSConnect","text":"<pre><code>DGLabWSConnect(uri: str, **kwargs)\n</code></pre> <p>DG-Lab \u7ec8\u7aef\u7684 WebSocket \u8fde\u63a5\u7ba1\u7406\u5668</p> <p>\u793a\u4f8b\uff1a <pre><code>async with DGLabWSConnect(\"ws://localhost:5678\") as client:\n    await client.bind()\n    print(\"\u6210\u529f\u7ed1\u5b9a\")\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>uri</code> <code>str</code> <p>WebSocket \u670d\u52a1\u7aef Uri</p> required <code>kwargs</code> <p>:class:<code>websockets.client.connect</code> \u7684\u5176\u4ed6\u53c2\u6570</p> <code>{}</code> Source code in <code>pydglab_ws/client/connect.py</code> <pre><code>def __init__(self, uri: str, **kwargs):\n    self._connect = ws_connect(uri=uri, **kwargs)\n</code></pre>"},{"location":"api/client/local/","title":"DG-Lab \u672c\u5730\u7ec8\u7aef","text":""},{"location":"api/client/local/#pydglab_ws.client.local.WebSocketMessageQueue","title":"WebSocketMessageQueue  <code>module-attribute</code>","text":"<pre><code>WebSocketMessageQueue = Queue[WebSocketMessage]\n</code></pre>"},{"location":"api/client/local/#pydglab_ws.client.local.DGLabLocalClient","title":"DGLabLocalClient","text":"<pre><code>DGLabLocalClient(client_id: UUID4, sender: Callable[[WebSocketMessage], Coroutine[Any, Any, Any]], queue_setter: Callable[[UUID4, WebSocketMessageQueue], Any], max_queue: int = 2 ** 5)\n</code></pre> <p>               Bases: <code>DGLabClient</code></p> <p>DG-Lab \u7ec8\u7aef\uff0c\u5e76\u4e0d\u5b9e\u9645\u53d1\u9001 WebSocket \u6d88\u606f\uff0c\u800c\u662f\u76f4\u63a5\u4e0e\u672c\u5730\u670d\u52a1\u7aef\u8fdb\u884c\u901a\u4fe1</p> <p>\u672c\u5730\u670d\u52a1\u7aef\u6307\u540c\u4e00\u7ebf\u7a0b\u4e0b\u7684 <code>DGLabWSServer</code></p> <p>Parameters:</p> Name Type Description Default <code>client_id</code> <code>UUID4</code> <p>\u7ec8\u7aef ID</p> required <code>sender</code> <code>Callable[[WebSocketMessage], Coroutine[Any, Any, Any]]</code> <p>\u7528\u4e8e\u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\u7684\u56de\u8c03\u51fd\u6570</p> required <code>queue_setter</code> <code>Callable[[UUID4, WebSocketMessageQueue], Any]</code> <p>\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u670d\u52a1\u7aef\u8bbe\u7f6e\u5ba2\u6237\u7aef\u7684\u6d88\u606f\u961f\u5217</p> required <code>max_queue</code> <code>int</code> <p>\u6d88\u606f\u961f\u5217\u6700\u5927\u957f\u5ea6</p> <code>2 ** 5</code> Source code in <code>pydglab_ws/client/local.py</code> <pre><code>def __init__(\n        self,\n        client_id: UUID4,\n        sender: Callable[[WebSocketMessage], Coroutine[Any, Any, Any]],\n        queue_setter: Callable[[UUID4, WebSocketMessageQueue], Any],\n        max_queue: int = 2 ** 5\n):\n    super().__init__()\n    self._client_id = client_id\n    self._send_callable = sender\n    self._message_queue: WebSocketMessageQueue = asyncio.Queue(max_queue)\n    queue_setter(client_id, self._message_queue)\n</code></pre>"},{"location":"api/client/ws/","title":"DG-Lab WebSocket \u7ec8\u7aef","text":""},{"location":"api/client/ws/#pydglab_ws.client.ws.DGLabWSClient","title":"DGLabWSClient","text":"<pre><code>DGLabWSClient(websocket: WebSocketClientProtocol)\n</code></pre> <p>               Bases: <code>DGLabClient</code></p> <p>DG-Lab WebSocket \u7ec8\u7aef</p> <p>Parameters:</p> Name Type Description Default <code>websocket</code> <code>WebSocketClientProtocol</code> <p>\u4e0e WebSocket \u670d\u52a1\u7aef\u7684\u8fde\u63a5</p> required Source code in <code>pydglab_ws/client/ws.py</code> <pre><code>def __init__(self, websocket: WebSocketClientProtocol):\n    super().__init__()\n    self._websocket = websocket\n</code></pre>"},{"location":"api/client/ws/#pydglab_ws.client.ws.DGLabWSClient.websocket","title":"websocket  <code>property</code>","text":"<pre><code>websocket: WebSocketClientProtocol\n</code></pre> <p>\u7ec8\u7aef\u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61</p> <p>\u53ef\u7528\u6765\u83b7\u53d6\u8fde\u63a5\u5ef6\u8fdf\u7b49\u4fe1\u606f\uff0c\u4f46\u4e0d\u5efa\u8bae\u8c03\u7528\u5b83\u7684 recv, send \u7b49\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd <code>DGLabWSClient</code> \u7684\u5404\u9879\u529f\u80fd</p>"},{"location":"api/server/server/","title":"DG-Lab WebSocket \u670d\u52a1\u7aef","text":""},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer","title":"DGLabWSServer","text":"<pre><code>DGLabWSServer(host: Union[str, Sequence[str]], port: Optional[int] = None, heartbeat_interval: float = None, **kwargs)\n</code></pre> <p>DG-Lab WebSocket \u670d\u52a1\u5668</p> <p>Parameters:</p> Name Type Description Default <code>host</code> <code>Union[str, Sequence[str]]</code> <p>WebSocket \u670d\u52a1\u5668\u7ed1\u5b9a\u7684\u63a5\u53e3</p> required <code>port</code> <code>Optional[int]</code> <p>\u76d1\u542c\u7aef\u53e3</p> <code>None</code> <code>heartbeat_interval</code> <code>float</code> <p>\u5fc3\u8df3\u5305\u53d1\u9001\u95f4\u9694\uff08\u79d2\uff09</p> <code>None</code> <code>kwargs</code> <p>:class:<code>websockets.server.serve</code> \u7684\u5176\u4ed6\u53c2\u6570</p> <code>{}</code> Source code in <code>pydglab_ws/server/server.py</code> <pre><code>def __init__(\n        self,\n        host: Union[str, Sequence[str]],\n        port: Optional[int] = None,\n        heartbeat_interval: float = None,\n        **kwargs\n):\n    self._serve = ws_serve(\n        self._ws_handler,\n        host=host,\n        port=port,\n        **kwargs\n    )\n    self._client_id_to_queue: Dict[UUID4, asyncio.Queue] = {}\n    self._uuid_to_ws: Dict[UUID4, WebSocketServerProtocol] = {}\n    self._client_id_to_target_id: Dict[UUID4, UUID4] = {}\n    self._target_id_to_client_id: Dict[UUID4, UUID4] = {}\n    self._message_type_to_handler: Dict[\n        MessageType,\n        Callable[\n            [DGLabWSServer, WebSocketMessage, Optional[WebSocketServerProtocol]],\n            Coroutine[Any, Any, None]\n        ]\n    ] = {\n        MessageType.BIND: self._handle_bind,\n        MessageType.MSG: self._handle_msg\n    }\n    self._message_type_to_callbacks: Dict[\n        MessageType,\n        Set[Callable[[WebSocketMessage, bool], Any]]\n    ] = {\n        MessageType.BIND: set(),\n        MessageType.MSG: set()\n    }\n    self._connection_callbacks: Tuple[\n        Set[Callable[[UUID4, WebSocketServerProtocol], Any]],\n        Set[Callable[[UUID4, WebSocketServerProtocol], Any]]\n    ] = (set(), set())\n    \"\"\"\u65b0\u8fde\u63a5\u5efa\u7acb\u65f6 \u4e0e \u8fde\u63a5\u65ad\u5f00\u65f6\"\"\"\n    self._heartbeat_interval = heartbeat_interval\n    self._heartbeat_task: Optional[Task] = None\n</code></pre>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.heartbeat_interval","title":"heartbeat_interval  <code>property</code> <code>writable</code>","text":"<pre><code>heartbeat_interval: Optional[float]\n</code></pre> <p>\u5fc3\u8df3\u5305\u53d1\u9001\u95f4\u9694\uff0c\u53ef\u4fee\u6539\uff08\u79d2\uff09</p>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.heartbeat_enabled","title":"heartbeat_enabled  <code>property</code>","text":"<pre><code>heartbeat_enabled: bool\n</code></pre> <p>\u662f\u5426\u5f00\u542f\u4e86\u5fc3\u8df3\u5305\u53d1\u9001\u8ba1\u65f6\u5668</p>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.client_id_to_target_id","title":"client_id_to_target_id  <code>property</code>","text":"<pre><code>client_id_to_target_id: Dict[UUID4, UUID4]\n</code></pre> <p><code>client_id</code> \u5230 <code>target_id</code> \u7684\u6620\u5c04</p>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.target_id_to_client_id","title":"target_id_to_client_id  <code>property</code>","text":"<pre><code>target_id_to_client_id: Dict[UUID4, UUID4]\n</code></pre> <p><code>target_id</code> \u5230 <code>client_id</code> \u7684\u6620\u5c04</p>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.ws_client_ids","title":"ws_client_ids  <code>property</code>","text":"<pre><code>ws_client_ids: Set[UUID4]\n</code></pre> <p>\u6240\u6709\u7684 WebSocket \u5ba2\u6237\u7aef ID\uff08\u5305\u542b\u7ec8\u7aef\u4e0e App\uff09</p>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.local_client_ids","title":"local_client_ids  <code>property</code>","text":"<pre><code>local_client_ids: Set[UUID4]\n</code></pre> <p>\u6240\u6709\u7684\u672c\u5730\u7ec8\u7aef ID</p>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.new_local_client","title":"new_local_client","text":"<pre><code>new_local_client(max_queue: int = 2 ** 5) -&gt; DGLabLocalClient\n</code></pre> <p>\u521b\u5efa\u65b0\u7684\u672c\u5730\u7ec8\u7aef <code>DGLabLocalClient</code>\uff0c\u8bb0\u5f55\u5e76\u8fd4\u56de</p> <p>Parameters:</p> Name Type Description Default <code>max_queue</code> <code>int</code> <p>\u7ec8\u7aef\u6d88\u606f\u961f\u5217\u6700\u5927\u957f\u5ea6</p> <code>2 ** 5</code> <p>Returns:</p> Type Description <code>DGLabLocalClient</code> <p>\u521b\u5efa\u597d\u7684\u672c\u5730\u7ec8\u7aef\u5bf9\u8c61</p> Source code in <code>pydglab_ws/server/server.py</code> <pre><code>def new_local_client(self, max_queue: int = 2 ** 5) -&gt; DGLabLocalClient:\n    \"\"\"\n    \u521b\u5efa\u65b0\u7684\u672c\u5730\u7ec8\u7aef [`DGLabLocalClient`][pydglab_ws.client.local.DGLabLocalClient]\uff0c\u8bb0\u5f55\u5e76\u8fd4\u56de\n    :param max_queue: \u7ec8\u7aef\u6d88\u606f\u961f\u5217\u6700\u5927\u957f\u5ea6\n    :return: \u521b\u5efa\u597d\u7684\u672c\u5730\u7ec8\u7aef\u5bf9\u8c61\n    \"\"\"\n    client_id = uuid4()\n    return DGLabLocalClient(\n        client_id,\n        self._message_handler,\n        self._client_id_to_queue.setdefault,\n        max_queue\n    )\n</code></pre>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.remove_local_client","title":"remove_local_client  <code>async</code>","text":"<pre><code>remove_local_client(client_id: UUID4) -&gt; bool\n</code></pre> <p>\u79fb\u9664\u5df2\u8fde\u63a5\u7684\u672c\u5730\u7ec8\u7aef\uff0c\u5e76\u901a\u77e5 App \u7ec8\u7aef\u5df2\u6389\u7ebf</p> <p>Parameters:</p> Name Type Description Default <code>client_id</code> <code>UUID4</code> <p>\u8981\u79fb\u9664\u7684\u672c\u5730\u7ec8\u7aef <code>DGLabLocalClient</code> \u7684 ID</p> required <p>Returns:</p> Type Description <code>bool</code> <p>\u5982\u679c\u8be5\u7ec8\u7aef\u5e76\u6ca1\u6709\u4e0e\u670d\u52a1\u7aef\u8fde\u63a5\uff0c\u8fd4\u56de <code>False</code>\uff0c\u5426\u5219\u8fd4\u56de <code>True</code></p> Source code in <code>pydglab_ws/server/server.py</code> <pre><code>async def remove_local_client(self, client_id: UUID4) -&gt; bool:\n    \"\"\"\n    \u79fb\u9664\u5df2\u8fde\u63a5\u7684\u672c\u5730\u7ec8\u7aef\uff0c\u5e76\u901a\u77e5 App \u7ec8\u7aef\u5df2\u6389\u7ebf\n\n    :param client_id: \u8981\u79fb\u9664\u7684\u672c\u5730\u7ec8\u7aef [`DGLabLocalClient`][pydglab_ws.client.local.DGLabLocalClient] \u7684 ID\n    :return: \u5982\u679c\u8be5\u7ec8\u7aef\u5e76\u6ca1\u6709\u4e0e\u670d\u52a1\u7aef\u8fde\u63a5\uff0c\u8fd4\u56de ``False``\uff0c\u5426\u5219\u8fd4\u56de ``True``\n    \"\"\"\n    try:\n        self._client_id_to_queue.pop(client_id)\n    except KeyError:\n        return False\n    else:\n        if client_id in self._client_id_to_target_id:\n            target_id = self._client_id_to_target_id.pop(client_id)\n            self._target_id_to_client_id.pop(target_id)\n            if websocket := self._uuid_to_ws.get(target_id):\n                message = WebSocketMessage(\n                    type=MessageType.BREAK,\n                    client_id=client_id,\n                    target_id=target_id,\n                    message=RetCode.CLIENT_DISCONNECTED\n                )\n                await self._send(message, websocket)\n        return True\n</code></pre>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.add_receive_callback","title":"add_receive_callback","text":"<pre><code>add_receive_callback(message_type: Literal[BIND, MSG], func: Callable[[WebSocketMessage, bool], Any])\n</code></pre> <p>\u6dfb\u52a0\u56de\u8c03\u51fd\u6570\uff0c\u5728\u6536\u5230\u6307\u5b9a\u7c7b\u578b\u7684\u6d88\u606f\u540e\u8c03\u7528\uff0c\u652f\u6301\u5f02\u6b65\u51fd\u6570</p> <p>Parameters:</p> Name Type Description Default <code>message_type</code> <code>Literal[BIND, MSG]</code> <p>\u6d88\u606f\u7c7b\u578b</p> required <code>func</code> <code>Callable[[WebSocketMessage, bool], Any]</code> <p>\u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165\u6d88\u606f\u6570\u636e\u548c\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u679c</p> required Source code in <code>pydglab_ws/server/server.py</code> <pre><code>def add_receive_callback(\n        self,\n        message_type: Literal[MessageType.BIND, MessageType.MSG],\n        func: Callable[[WebSocketMessage, bool], Any]\n):\n    \"\"\"\n    \u6dfb\u52a0\u56de\u8c03\u51fd\u6570\uff0c\u5728\u6536\u5230\u6307\u5b9a\u7c7b\u578b\u7684\u6d88\u606f\u540e\u8c03\u7528\uff0c\u652f\u6301\u5f02\u6b65\u51fd\u6570\n    :param message_type: \u6d88\u606f\u7c7b\u578b\n    :param func: \u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165\u6d88\u606f\u6570\u636e\u548c\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u679c\n    \"\"\"\n    self._message_type_to_callbacks[message_type].add(func)\n</code></pre>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.remove_receive_callback","title":"remove_receive_callback","text":"<pre><code>remove_receive_callback(message_type: Literal[BIND, MSG], func: Callable[[WebSocketMessage, bool], Any])\n</code></pre> <p>\u79fb\u9664\u5728\u6536\u5230\u6307\u5b9a\u7c7b\u578b\u7684\u6d88\u606f\u540e\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570</p> <p>Parameters:</p> Name Type Description Default <code>message_type</code> <code>Literal[BIND, MSG]</code> <p>\u6d88\u606f\u7c7b\u578b</p> required <code>func</code> <code>Callable[[WebSocketMessage, bool], Any]</code> <p>\u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165\u6d88\u606f\u6570\u636e\u548c\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u679c</p> required Source code in <code>pydglab_ws/server/server.py</code> <pre><code>def remove_receive_callback(\n        self,\n        message_type: Literal[MessageType.BIND, MessageType.MSG],\n        func: Callable[[WebSocketMessage, bool], Any]\n):\n    \"\"\"\n    \u79fb\u9664\u5728\u6536\u5230\u6307\u5b9a\u7c7b\u578b\u7684\u6d88\u606f\u540e\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570\n    :param message_type: \u6d88\u606f\u7c7b\u578b\n    :param func: \u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165\u6d88\u606f\u6570\u636e\u548c\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u679c\n    \"\"\"\n    self._message_type_to_callbacks[message_type].remove(func)\n</code></pre>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.add_connection_callback","title":"add_connection_callback","text":"<pre><code>add_connection_callback(mode: Literal['new_connect', 'disconnect'], func: Callable[[UUID4, WebSocketServerProtocol], Any]) -&gt; bool\n</code></pre> <p>\u6dfb\u52a0\u56de\u8c03\u51fd\u6570\uff0c\u5728\u65b0\u7684 WebSocket \u8fde\u63a5\u5efa\u7acb\u65f6\uff08\u65b0\u5ba2\u6237\u7aef\uff09\u6216\u8fde\u63a5\u65ad\u5f00\u65f6\u8c03\u7528</p> <p>Parameters:</p> Name Type Description Default <code>mode</code> <code>Literal['new_connect', 'disconnect']</code> <p>\u7c7b\u578b\uff0c<code>new_connect</code> - \u65b0\u8fde\u63a5\u65f6\uff0c\u5904\u7406\u6d88\u606f\u4e4b\u524d\uff1b<code>disconnect</code> - \u8fde\u63a5\u65ad\u5f00\u65f6</p> required <code>func</code> <code>Callable[[UUID4, WebSocketServerProtocol], Any]</code> <p>\u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165 \u7ec8\u7aef / App \u7684 <code>clientId</code> / <code>targetId</code> \u548c\u8be5\u5ba2\u6237\u7aef\u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61</p> required <p>Returns:</p> Type Description <code>bool</code> <p><code>mode</code> \u53c2\u6570\u4e0d\u5408\u6cd5\u65f6\u8fd4\u56de <code>False</code>\uff0c\u5426\u5219\u8fd4\u56de <code>True</code></p> Source code in <code>pydglab_ws/server/server.py</code> <pre><code>def add_connection_callback(\n        self,\n        mode: Literal[\"new_connect\", \"disconnect\"],\n        func: Callable[[UUID4, WebSocketServerProtocol], Any]\n) -&gt; bool:\n    \"\"\"\n    \u6dfb\u52a0\u56de\u8c03\u51fd\u6570\uff0c\u5728\u65b0\u7684 WebSocket \u8fde\u63a5\u5efa\u7acb\u65f6\uff08\u65b0\u5ba2\u6237\u7aef\uff09\u6216\u8fde\u63a5\u65ad\u5f00\u65f6\u8c03\u7528\n    :param mode: \u7c7b\u578b\uff0c``new_connect`` - \u65b0\u8fde\u63a5\u65f6\uff0c\u5904\u7406\u6d88\u606f\u4e4b\u524d\uff1b``disconnect`` - \u8fde\u63a5\u65ad\u5f00\u65f6\n    :param func: \u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165 \u7ec8\u7aef / App \u7684 ``clientId`` / ``targetId`` \u548c\u8be5\u5ba2\u6237\u7aef\u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61\n    :return: ``mode`` \u53c2\u6570\u4e0d\u5408\u6cd5\u65f6\u8fd4\u56de ``False``\uff0c\u5426\u5219\u8fd4\u56de ``True``\n    \"\"\"\n    new_connect_set, disconnect_set = self._connection_callbacks\n    if mode == \"new_connect\":\n        new_connect_set.add(func)\n    elif mode == \"disconnect\":\n        disconnect_set.add(func)\n    else:\n        return False\n    return True\n</code></pre>"},{"location":"api/server/server/#pydglab_ws.server.server.DGLabWSServer.remove_connection_callback","title":"remove_connection_callback","text":"<pre><code>remove_connection_callback(mode: Literal['new_connect', 'disconnect'], func: Callable[[UUID4, WebSocketServerProtocol], Any]) -&gt; bool\n</code></pre> <p>\u5220\u9664\u5728\u65b0\u7684 WebSocket \u8fde\u63a5\u5efa\u7acb\u65f6\uff08\u65b0\u5ba2\u6237\u7aef\uff09\u6216\u8fde\u63a5\u65ad\u5f00\u65f6\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570</p> <p>Parameters:</p> Name Type Description Default <code>mode</code> <code>Literal['new_connect', 'disconnect']</code> <p>\u7c7b\u578b\uff0c<code>new_connect</code> - \u65b0\u8fde\u63a5\u65f6\uff0c\u5904\u7406\u6d88\u606f\u4e4b\u524d\uff1b<code>disconnect</code> - \u8fde\u63a5\u65ad\u5f00\u65f6</p> required <code>func</code> <code>Callable[[UUID4, WebSocketServerProtocol], Any]</code> <p>\u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165 \u7ec8\u7aef / App \u7684 <code>clientId</code> / <code>targetId</code> \u548c\u8be5\u5ba2\u6237\u7aef\u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61</p> required <p>Returns:</p> Type Description <code>bool</code> <p>\u662f\u5426\u627e\u5230\u4e86\u56de\u8c03\u51fd\u6570</p> Source code in <code>pydglab_ws/server/server.py</code> <pre><code>def remove_connection_callback(\n        self,\n        mode: Literal[\"new_connect\", \"disconnect\"],\n        func: Callable[[UUID4, WebSocketServerProtocol], Any]\n) -&gt; bool:\n    \"\"\"\n    \u5220\u9664\u5728\u65b0\u7684 WebSocket \u8fde\u63a5\u5efa\u7acb\u65f6\uff08\u65b0\u5ba2\u6237\u7aef\uff09\u6216\u8fde\u63a5\u65ad\u5f00\u65f6\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570\n    :param mode: \u7c7b\u578b\uff0c``new_connect`` - \u65b0\u8fde\u63a5\u65f6\uff0c\u5904\u7406\u6d88\u606f\u4e4b\u524d\uff1b``disconnect`` - \u8fde\u63a5\u65ad\u5f00\u65f6\n    :param func: \u56de\u8c03\u51fd\u6570\uff0c\u4f20\u5165 \u7ec8\u7aef / App \u7684 ``clientId`` / ``targetId`` \u548c\u8be5\u5ba2\u6237\u7aef\u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61\n    :return: \u662f\u5426\u627e\u5230\u4e86\u56de\u8c03\u51fd\u6570\n    \"\"\"\n    new_connect_set, disconnect_set = self._connection_callbacks\n    try:\n        if mode == \"new_connect\":\n            new_connect_set.remove(func)\n        elif mode == \"disconnect\":\n            disconnect_set.remove(func)\n    except KeyError:\n        return False\n    else:\n        return True\n</code></pre>"},{"location":"examples/server/","title":"\u670d\u52a1\u7aef","text":"<p>\u8fd9\u6bb5\u4ee3\u7801\u4ec5\u63d0\u4f9b DG-Lab WebSocket \u670d\u52a1\u7aef\u670d\u52a1</p> examples/server.py<pre><code>\"\"\"\n\u8fd9\u6bb5\u4ee3\u7801\u4ec5\u63d0\u4f9b DG-Lab WebSocket \u670d\u52a1\u7aef\u670d\u52a1\n\"\"\"\nimport asyncio\n\nfrom pydglab_ws.server import DGLabWSServer\n\n\nasync def main():\n    async with DGLabWSServer(\"0.0.0.0\", 5678, 60) as server:\n        while True:\n            print(f\"\u5df2\u8fde\u63a5\u7684 WebSocket \u5ba2\u6237\u7aef\uff08\u7ec8\u7aef/App\uff09\uff1a{list(server.ws_client_ids)}\")\n            print(f\"\u5df2\u8fde\u63a5\u7684\u672c\u5730\u7ec8\u7aef\uff1a{list(server.local_client_ids)}\")\n            print(f\"\u5173\u7cfb\u7ed1\u5b9a\uff1a{server.client_id_to_target_id}\")\n            await asyncio.sleep(5)\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"examples/server_with_local_client/","title":"\u4e0e\u672c\u5730\u7ec8\u7aef\u4e00\u4f53\u7684\u670d\u52a1\u7aef","text":"<p>\u8bf7\u5148\u5b89\u88c5 qrcode\uff1a <pre><code>pip install qrcode\n</code></pre></p> <p>\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u4ec5\u63d0\u4f9b DG-Lab WebSocket \u670d\u52a1\u7aef\u670d\u52a1\uff0c\u8fd8\u751f\u6210\u4e86\u4e00\u4e2a\u672c\u5730\u7ec8\u7aef\u53ef\u4f9b App \u8fde\u63a5\u3002</p> <p>Tip</p> <p>\u4e0d\u7ba1\u662f\u672c\u5730\u7ec8\u7aef <code>DGLabLocalClient</code> \u8fd8\u662f WebSocket \u7ec8\u7aef <code>DGLabWSClient</code>\uff0c \u5305\u542b\u7684\u4e3b\u8981\u65b9\u6cd5\u90fd\u76f8\u540c\uff0c\u56e0\u6b64\u5728\u8be5\u6bb5\u4ee3\u7801\u4e2d\uff0c\u7ec8\u7aef\u76f8\u5173\u7684\u903b\u8f91\u4e0e\u4e0a\u9762\u7684\u72ec\u7acb\u7684 WebSocket \u7ec8\u7aef\u7684\u5b9e\u73b0\u57fa\u672c\u76f8\u540c\u3002 \u8fd9\u79cd\u65b9\u5f0f\uff0c\u7701\u53bb\u4e86\u7ec8\u7aef\u8fde\u63a5 WebSocket \u670d\u52a1\u7aef\u7684\u73af\u8282\uff0c\u7ec8\u7aef\u4e0e WebSocket \u670d\u52a1\u7aef\u4e00\u4f53\uff0c\u7f51\u7edc\u5ef6\u8fdf\u66f4\u4f4e\uff0c\u90e8\u7f72\u66f4\u65b9\u4fbf\u3002</p> examples/server_with_local_client.py<pre><code>\"\"\"\n\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u4ec5\u63d0\u4f9b DG-Lab WebSocket \u670d\u52a1\u7aef\u670d\u52a1\uff0c\u8fd8\u751f\u6210\u4e86\u4e00\u4e2a\u672c\u5730\u7ec8\u7aef\u53ef\u4f9b App \u8fde\u63a5\u3002\n\n\u4e0d\u7ba1\u662f\u672c\u5730\u7ec8\u7aef :class:`DGLabLocalClient` \u8fd8\u662f WebSocket \u7ec8\u7aef :class:`DGLabWSClient`\uff0c\u5305\u542b\u7684\u4e3b\u8981\u65b9\u6cd5\u90fd\u76f8\u540c\uff0c\n\u56e0\u6b64\u5728\u8be5\u7aef\u4ee3\u7801\u4e2d\uff0c\u7ec8\u7aef\u76f8\u5173\u7684\u903b\u8f91\u4e0e ``ws_client.py`` WebSocket \u7ec8\u7aef\u7684\u5b9e\u73b0\u57fa\u672c\u76f8\u540c\u3002\n\n\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7701\u53bb\u4e86\u7ec8\u7aef\u8fde\u63a5 WebSocket \u670d\u52a1\u7aef\u7684\u73af\u8282\uff0c\u7ec8\u7aef\u4e0e WebSocket \u670d\u52a1\u7aef\u4e00\u4f53\uff0c\u7f51\u7edc\u5ef6\u8fdf\u66f4\u4f4e\uff0c\u90e8\u7f72\u66f4\u65b9\u4fbf\u3002\n\"\"\"\nimport asyncio\nimport io\n\nimport qrcode\n\nfrom pydglab_ws import StrengthData, FeedbackButton, Channel, StrengthOperationType, RetCode, DGLabWSServer\n\n\ndef print_qrcode(data: str):\n    \"\"\"\u8f93\u51fa\u4e8c\u7ef4\u7801\u5230\u7ec8\u7aef\u754c\u9762\"\"\"\n    qr = qrcode.QRCode()\n    qr.add_data(data)\n    f = io.StringIO()\n    qr.print_ascii(out=f)\n    f.seek(0)\n    print(f.read())\n\n\nasync def main():\n    async with DGLabWSServer(\"0.0.0.0\", 5678, 60) as server:\n        client = server.new_local_client()\n\n        url = client.get_qrcode(\"ws://192.168.1.161:5678\")\n        print(\"\u8bf7\u7528 DG-Lab App \u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u8fde\u63a5\")\n        print_qrcode(url)\n\n        # \u7b49\u5f85\u7ed1\u5b9a\n        await client.bind()\n        print(f\"\u5df2\u4e0e App {client.target_id} \u6210\u529f\u7ed1\u5b9a\")\n\n        # \u4ece App \u63a5\u6536\u6570\u636e\u66f4\u65b0\uff0c\u5e76\u8fdb\u884c\u8fdc\u63a7\u64cd\u4f5c\n        last_strength = None\n        async for data in client.data_generator():\n\n            # \u63a5\u6536\u901a\u9053\u5f3a\u5ea6\u6570\u636e\n            if isinstance(data, StrengthData):\n                print(f\"\u4ece App \u6536\u5230\u901a\u9053\u5f3a\u5ea6\u6570\u636e\u66f4\u65b0\uff1a{data}\")\n                last_strength = data\n\n            # \u63a5\u6536 App \u53cd\u9988\u6309\u94ae\n            elif isinstance(data, FeedbackButton):\n                print(f\"App \u89e6\u53d1\u4e86\u53cd\u9988\u6309\u94ae\uff1a{data.name}\")\n\n                if data == FeedbackButton.A1:\n                    # \u8bbe\u7f6e\u5f3a\u5ea6\u5230 A \u901a\u9053\u4e0a\u9650\n                    print(\"\u5bf9\u65b9\u6309\u4e0b\u4e86 A \u901a\u9053\u5706\u5708\u6309\u94ae\uff0c\u52a0\u5927\u529b\u5ea6\")\n                    if last_strength:\n                        await client.set_strength(\n                            Channel.A,\n                            StrengthOperationType.SET_TO,\n                            last_strength.a_limit\n                        )\n\n            # \u63a5\u6536 \u5fc3\u8df3 / App \u65ad\u5f00\u901a\u77e5\n            elif data == RetCode.CLIENT_DISCONNECTED:\n                print(\"App \u5df2\u65ad\u5f00\u8fde\u63a5\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u65b0\u626b\u7801\u8fdb\u884c\u8fde\u63a5\u7ed1\u5b9a\")\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"examples/ws_client/","title":"WebSocket \u7ec8\u7aef","text":"<p>\u8bf7\u5148\u5b89\u88c5 qrcode\uff1a <pre><code>pip install qrcode\n</code></pre></p> <p>\u5f53\u8fdb\u5165 <code>DGLabWSServer</code> \u7684\u5f02\u6b65\u751f\u6210\u5668\u65f6\uff0c\u4ece WebSocket \u670d\u52a1\u7aef\u83b7\u53d6 <code>clientId</code> \u7684\u64cd\u4f5c\u4f1a \u81ea\u52a8\u5b8c\u6210</p> examples/ws_client.py<pre><code>\"\"\"\n\u8bf7\u5148\u5b89\u88c5 qrcode\uff1a``pip install qrcode``\n\"\"\"\nimport asyncio\nimport io\n\nimport qrcode\nfrom websockets import ConnectionClosedOK\n\nfrom pydglab_ws import DGLabWSConnect, StrengthData, FeedbackButton, Channel, StrengthOperationType, RetCode\n\n\ndef print_qrcode(data: str):\n    \"\"\"\u8f93\u51fa\u4e8c\u7ef4\u7801\u5230\u7ec8\u7aef\u754c\u9762\"\"\"\n    qr = qrcode.QRCode()\n    qr.add_data(data)\n    f = io.StringIO()\n    qr.print_ascii(out=f)\n    f.seek(0)\n    print(f.read())\n\n\nasync def main():\n    try:\n        async with DGLabWSConnect(\"ws://192.168.1.161:5678\") as client:\n            # \u83b7\u53d6\u4e8c\u7ef4\u7801\n            url = client.get_qrcode()\n            print(\"\u8bf7\u7528 DG-Lab App \u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u8fde\u63a5\")\n            print_qrcode(url)\n\n            # \u7b49\u5f85\u7ed1\u5b9a\n            await client.bind()\n            print(f\"\u5df2\u4e0e App {client.target_id} \u6210\u529f\u7ed1\u5b9a\")\n\n            # \u4ece App \u63a5\u6536\u6570\u636e\u66f4\u65b0\uff0c\u5e76\u8fdb\u884c\u8fdc\u63a7\u64cd\u4f5c\n            last_strength = None\n            async for data in client.data_generator():\n\n                # \u63a5\u6536\u901a\u9053\u5f3a\u5ea6\u6570\u636e\n                if isinstance(data, StrengthData):\n                    print(f\"\u4ece App \u6536\u5230\u901a\u9053\u5f3a\u5ea6\u6570\u636e\u66f4\u65b0\uff1a{data}\")\n                    last_strength = data\n\n                # \u63a5\u6536 App \u53cd\u9988\u6309\u94ae\n                elif isinstance(data, FeedbackButton):\n                    print(f\"App \u89e6\u53d1\u4e86\u53cd\u9988\u6309\u94ae\uff1a{data.name}\")\n\n                    if data == FeedbackButton.A1:\n                        # \u8bbe\u7f6e\u5f3a\u5ea6\u5230 A \u901a\u9053\u4e0a\u9650\n                        print(\"\u5bf9\u65b9\u6309\u4e0b\u4e86 A \u901a\u9053\u5706\u5708\u6309\u94ae\uff0c\u52a0\u5927\u529b\u5ea6\")\n                        if last_strength:\n                            await client.set_strength(\n                                Channel.A,\n                                StrengthOperationType.SET_TO,\n                                last_strength.a_limit\n                            )\n\n                # \u63a5\u6536 \u5fc3\u8df3 / App \u65ad\u5f00\u901a\u77e5\n                elif data == RetCode.CLIENT_DISCONNECTED:\n                    print(\"App \u5df2\u65ad\u5f00\u8fde\u63a5\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u65b0\u626b\u7801\u8fdb\u884c\u8fde\u63a5\u7ed1\u5b9a\")\n\n    except ConnectionClosedOK:\n        print(\"Socket \u670d\u52a1\u7aef\u65ad\u5f00\u8fde\u63a5\")\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"}]}